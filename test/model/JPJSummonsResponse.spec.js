/*
 * IIMMPACT API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2020-09-14T13:01:14Z
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.17
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.IimmpactApi);
  }
}(this, function(expect, IimmpactApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('JPJSummonsResponse', function() {
      beforeEach(function() {
        instance = new IimmpactApi.JPJSummonsResponse();
      });

      it('should create an instance of JPJSummonsResponse', function() {
        // TODO: update the code to test JPJSummonsResponse
        expect(instance).to.be.a(IimmpactApi.JPJSummonsResponse);
      });

      it('should have the property summonNoticeNo_ (base name: "Summon Notice No.")', function() {
        // TODO: update the code to test the property summonNoticeNo_
        expect(instance).to.have.property('summonNoticeNo_');
        // expect(instance.summonNoticeNo_).to.be(expectedValueLiteral);
      });

      it('should have the property noticeType (base name: "Notice Type")', function() {
        // TODO: update the code to test the property noticeType
        expect(instance).to.have.property('noticeType');
        // expect(instance.noticeType).to.be(expectedValueLiteral);
      });

      it('should have the property vehicleRegistrationNo_ (base name: "Vehicle Registration No.")', function() {
        // TODO: update the code to test the property vehicleRegistrationNo_
        expect(instance).to.have.property('vehicleRegistrationNo_');
        // expect(instance.vehicleRegistrationNo_).to.be(expectedValueLiteral);
      });

      it('should have the property dateTimeOfOffenses (base name: "Date & Time of Offenses")', function() {
        // TODO: update the code to test the property dateTimeOfOffenses
        expect(instance).to.have.property('dateTimeOfOffenses');
        // expect(instance.dateTimeOfOffenses).to.be(expectedValueLiteral);
      });

      it('should have the property noticeCompoundPaymentDate (base name: "Notice Compound Payment Date")', function() {
        // TODO: update the code to test the property noticeCompoundPaymentDate
        expect(instance).to.have.property('noticeCompoundPaymentDate');
        // expect(instance.noticeCompoundPaymentDate).to.be(expectedValueLiteral);
      });

      it('should have the property offensesType (base name: "Offenses Type")', function() {
        // TODO: update the code to test the property offensesType
        expect(instance).to.have.property('offensesType');
        // expect(instance.offensesType).to.be(expectedValueLiteral);
      });

      it('should have the property offensesLocation (base name: "Offenses Location")', function() {
        // TODO: update the code to test the property offensesLocation
        expect(instance).to.have.property('offensesLocation');
        // expect(instance.offensesLocation).to.be(expectedValueLiteral);
      });

    });
  });

}));

/*
 * IIMMPACT API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2020-09-14T13:01:14Z
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.17
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.IimmpactApi);
  }
}(this, function(expect, IimmpactApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('InlineResponse2002Data', function() {
      beforeEach(function() {
        instance = new IimmpactApi.InlineResponse2002Data();
      });

      it('should create an instance of InlineResponse2002Data', function() {
        // TODO: update the code to test InlineResponse2002Data
        expect(instance).to.be.a(IimmpactApi.InlineResponse2002Data);
      });

      it('should have the property status (base name: "status")', function() {
        // TODO: update the code to test the property status
        expect(instance).to.have.property('status');
        // expect(instance.status).to.be(expectedValueLiteral);
      });

      it('should have the property category (base name: "category")', function() {
        // TODO: update the code to test the property category
        expect(instance).to.have.property('category');
        // expect(instance.category).to.be(expectedValueLiteral);
      });

      it('should have the property productCode (base name: "product_code")', function() {
        // TODO: update the code to test the property productCode
        expect(instance).to.have.property('productCode');
        // expect(instance.productCode).to.be(expectedValueLiteral);
      });

      it('should have the property productName (base name: "product_name")', function() {
        // TODO: update the code to test the property productName
        expect(instance).to.have.property('productName');
        // expect(instance.productName).to.be(expectedValueLiteral);
      });

      it('should have the property denomination (base name: "denomination")', function() {
        // TODO: update the code to test the property denomination
        expect(instance).to.have.property('denomination');
        // expect(instance.denomination).to.be(expectedValueLiteral);
      });

      it('should have the property unitPrice (base name: "unit_price")', function() {
        // TODO: update the code to test the property unitPrice
        expect(instance).to.have.property('unitPrice');
        // expect(instance.unitPrice).to.be(expectedValueLiteral);
      });

      it('should have the property discount (base name: "discount")', function() {
        // TODO: update the code to test the property discount
        expect(instance).to.have.property('discount');
        // expect(instance.discount).to.be(expectedValueLiteral);
      });

      it('should have the property apiParameter (base name: "api_parameter")', function() {
        // TODO: update the code to test the property apiParameter
        expect(instance).to.have.property('apiParameter');
        // expect(instance.apiParameter).to.be(expectedValueLiteral);
      });

      it('should have the property updateTime (base name: "update_time")', function() {
        // TODO: update the code to test the property updateTime
        expect(instance).to.have.property('updateTime');
        // expect(instance.updateTime).to.be(expectedValueLiteral);
      });

      it('should have the property note (base name: "note")', function() {
        // TODO: update the code to test the property note
        expect(instance).to.have.property('note');
        // expect(instance.note).to.be(expectedValueLiteral);
      });

      it('should have the property productImg (base name: "product_img")', function() {
        // TODO: update the code to test the property productImg
        expect(instance).to.have.property('productImg');
        // expect(instance.productImg).to.be(expectedValueLiteral);
      });

    });
  });

}));

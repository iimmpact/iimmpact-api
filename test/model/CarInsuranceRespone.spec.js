/*
 * IIMMPACT API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2020-09-14T13:01:14Z
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.17
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.IimmpactApi);
  }
}(this, function(expect, IimmpactApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('CarInsuranceRespone', function() {
      beforeEach(function() {
        instance = new IimmpactApi.CarInsuranceRespone();
      });

      it('should create an instance of CarInsuranceRespone', function() {
        // TODO: update the code to test CarInsuranceRespone
        expect(instance).to.be.a(IimmpactApi.CarInsuranceRespone);
      });

      it('should have the property message (base name: "message")', function() {
        // TODO: update the code to test the property message
        expect(instance).to.have.property('message');
        // expect(instance.message).to.be(expectedValueLiteral);
      });

      it('should have the property make (base name: "make")', function() {
        // TODO: update the code to test the property make
        expect(instance).to.have.property('make');
        // expect(instance.make).to.be(expectedValueLiteral);
      });

      it('should have the property model (base name: "model")', function() {
        // TODO: update the code to test the property model
        expect(instance).to.have.property('model');
        // expect(instance.model).to.be(expectedValueLiteral);
      });

      it('should have the property yearMake (base name: "yearMake")', function() {
        // TODO: update the code to test the property yearMake
        expect(instance).to.have.property('yearMake');
        // expect(instance.yearMake).to.be(expectedValueLiteral);
      });

      it('should have the property chassisNo (base name: "chassisNo")', function() {
        // TODO: update the code to test the property chassisNo
        expect(instance).to.have.property('chassisNo');
        // expect(instance.chassisNo).to.be(expectedValueLiteral);
      });

      it('should have the property engineNo (base name: "engineNo")', function() {
        // TODO: update the code to test the property engineNo
        expect(instance).to.have.property('engineNo');
        // expect(instance.engineNo).to.be(expectedValueLiteral);
      });

      it('should have the property seatingCapacity (base name: "seatingCapacity")', function() {
        // TODO: update the code to test the property seatingCapacity
        expect(instance).to.have.property('seatingCapacity');
        // expect(instance.seatingCapacity).to.be(expectedValueLiteral);
      });

      it('should have the property variant (base name: "variant")', function() {
        // TODO: update the code to test the property variant
        expect(instance).to.have.property('variant');
        // expect(instance.variant).to.be(expectedValueLiteral);
      });

      it('should have the property vehImage (base name: "vehImage")', function() {
        // TODO: update the code to test the property vehImage
        expect(instance).to.have.property('vehImage');
        // expect(instance.vehImage).to.be(expectedValueLiteral);
      });

      it('should have the property nextNCDPerCentage (base name: "nextNCDPerCentage")', function() {
        // TODO: update the code to test the property nextNCDPerCentage
        expect(instance).to.have.property('nextNCDPerCentage');
        // expect(instance.nextNCDPerCentage).to.be(expectedValueLiteral);
      });

      it('should have the property nextNcdExpDate (base name: "nextNcdExpDate")', function() {
        // TODO: update the code to test the property nextNcdExpDate
        expect(instance).to.have.property('nextNcdExpDate');
        // expect(instance.nextNcdExpDate).to.be(expectedValueLiteral);
      });

      it('should have the property currentPolicy (base name: "currentPolicy")', function() {
        // TODO: update the code to test the property currentPolicy
        expect(instance).to.have.property('currentPolicy');
        // expect(instance.currentPolicy).to.be(expectedValueLiteral);
      });

    });
  });

}));

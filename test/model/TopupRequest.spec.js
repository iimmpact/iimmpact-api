/*
 * IIMMPACT API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2020-09-14T13:01:14Z
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.17
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.IimmpactApi);
  }
}(this, function(expect, IimmpactApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('TopupRequest', function() {
      beforeEach(function() {
        instance = new IimmpactApi.TopupRequest();
      });

      it('should create an instance of TopupRequest', function() {
        // TODO: update the code to test TopupRequest
        expect(instance).to.be.a(IimmpactApi.TopupRequest);
      });

      it('should have the property refid (base name: "refid")', function() {
        // TODO: update the code to test the property refid
        expect(instance).to.have.property('refid');
        // expect(instance.refid).to.be(expectedValueLiteral);
      });

      it('should have the property product (base name: "product")', function() {
        // TODO: update the code to test the property product
        expect(instance).to.have.property('product');
        // expect(instance.product).to.be(expectedValueLiteral);
      });

      it('should have the property remarks (base name: "remarks")', function() {
        // TODO: update the code to test the property remarks
        expect(instance).to.have.property('remarks');
        // expect(instance.remarks).to.be(expectedValueLiteral);
      });

      it('should have the property account (base name: "account")', function() {
        // TODO: update the code to test the property account
        expect(instance).to.have.property('account');
        // expect(instance.account).to.be(expectedValueLiteral);
      });

      it('should have the property amount (base name: "amount")', function() {
        // TODO: update the code to test the property amount
        expect(instance).to.have.property('amount');
        // expect(instance.amount).to.be(expectedValueLiteral);
      });

      it('should have the property sync (base name: "sync")', function() {
        // TODO: update the code to test the property sync
        expect(instance).to.have.property('sync');
        // expect(instance.sync).to.be(expectedValueLiteral);
      });

    });
  });

}));

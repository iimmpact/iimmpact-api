/*
 * IIMMPACT API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2020-09-14T13:01:14Z
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.17
 *
 * Do not edit the class manually.
 *
 */

(function (root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.IimmpactApi);
  }
}(this, function (expect, IimmpactApi) {
  'use strict';

  var instance;

  beforeEach(function () {
    instance = new IimmpactApi.ServicesApi();
  });

  describe('(package)', function () {
    describe('ServicesApi', function () {
      describe('v1BillPresentmentGet', function () {
        it('should call v1BillPresentmentGet successfully', function (done) {
          // TODO: uncomment, update parameter values for v1BillPresentmentGet call and complete the assertions
          /*
          var account = "account_example";
          var opts = {};
          opts.accountName = "accountName_example";
          opts.product = "product_example";

          instance.v1BillPresentmentGet(account, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(IimmpactApi.BillPresentmentResponse);
            expect(data.data).to.be.a(IimmpactApi.BillPresentmentResponseData);
                  expect(data.data.message).to.be.a('string');
              expect(data.data.message).to.be("");
              expect(data.data.customField).to.be.a('string');
              expect(data.data.customField).to.be("");
              expect(data.data.customerName).to.be.a('string');
              expect(data.data.customerName).to.be("");
              expect(data.data.outstanding).to.be.a('number');
              expect(data.data.outstanding).to.be();
              expect(data.data.balance).to.be.a('string');
              expect(data.data.balance).to.be("");
              expect(data.data.data).to.be.a('string');
              expect(data.data.data).to.be("");
              expect(data.data.address).to.be.a('string');
              expect(data.data.address).to.be("");
              expect(data.data.eBill).to.be.a('string');
              expect(data.data.eBill).to.be("");
            expect(data.metadata).to.be.a(IimmpactApi.BillPresentmentResponseMetadata);
                  expect(data.metadata.statusCode).to.be.a('number');
              expect(data.metadata.statusCode).to.be();
              expect(data.metadata.productCode).to.be.a('string');
              expect(data.metadata.productCode).to.be("");
              expect(data.metadata.lastUpdated).to.be.a('string');
              expect(data.metadata.lastUpdated).to.be("");

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('v1NetworkstatusGet', function () {
        it('should call v1NetworkstatusGet successfully', function (done) {
          // TODO: uncomment, update parameter values for v1NetworkstatusGet call and complete the assertions
          /*
          var product = "product_example";

          instance.v1NetworkstatusGet(product, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(IimmpactApi.NetworkStatusResponse);
            expect(data.data).to.be.a(IimmpactApi.NetworkStatusResponseData);
                  expect(data.data.productCode).to.be.a('string');
              expect(data.data.productCode).to.be("");
              expect(data.data.productName).to.be.a('string');
              expect(data.data.productName).to.be("");
              expect(data.data.productImg).to.be.a('string');
              expect(data.data.productImg).to.be("");
              expect(data.data.networkStatus).to.be.a('string');
              expect(data.data.networkStatus).to.be("");
            expect(data.metadata).to.be.a(IimmpactApi.NetworkStatusResponseMetadata);
                  expect(data.metadata.statusCode).to.be.a('number');
              expect(data.metadata.statusCode).to.be(0);
              expect(data.metadata.lastUpdated).to.be.a('string');
              expect(data.metadata.lastUpdated).to.be("");

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('v1TopupPost', function () {
        it('should call v1TopupPost successfully', function (done) {
          // var defaultClient = IimmpactApi.ApiClient.instance;
          // var SSO = defaultClient.authentications['SSO'];
          // // TODO: uncomment, update parameter values for v1TopupPost call and complete the assertions
          // var topupRequest = new IimmpactApi.TopupRequest();
          // topupRequest.refid = "0132418747";
          // topupRequest.product = "C";
          // topupRequest.remarks = "";
          // topupRequest.account = "test123";
          // topupRequest.amount = 1;
          // topupRequest.sync = false;
          // instance.v1TopupPostCallback(topupRequest, function (error, data) {
          //   console.log(error);
          //   console.log(data);
          // });
          done();
        });
      });
    });
  });

}));

/*
 * IIMMPACT API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2020-09-14T13:01:14Z
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.17
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/TransactionsResponseBalance', 'model/TransactionsResponseProduct', 'model/TransactionsResponseStatus'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./TransactionsResponseBalance'), require('./TransactionsResponseProduct'), require('./TransactionsResponseStatus'));
  } else {
    // Browser globals (root is window)
    if (!root.IimmpactApi) {
      root.IimmpactApi = {};
    }
    root.IimmpactApi.TransactionsResponseData = factory(root.IimmpactApi.ApiClient, root.IimmpactApi.TransactionsResponseBalance, root.IimmpactApi.TransactionsResponseProduct, root.IimmpactApi.TransactionsResponseStatus);
  }
}(this, function(ApiClient, TransactionsResponseBalance, TransactionsResponseProduct, TransactionsResponseStatus) {
  'use strict';

  /**
   * The TransactionsResponseData model module.
   * @module model/TransactionsResponseData
   * @version 2020-09-14T13:01:14Z
   */

  /**
   * Constructs a new <code>TransactionsResponseData</code>.
   * @alias module:model/TransactionsResponseData
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>TransactionsResponseData</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TransactionsResponseData} obj Optional instance to populate.
   * @return {module:model/TransactionsResponseData} The populated <code>TransactionsResponseData</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('entry_date'))
        obj.entryDate = ApiClient.convertToType(data['entry_date'], 'String');
      if (data.hasOwnProperty('product'))
        obj.product = TransactionsResponseProduct.constructFromObject(data['product']);
      if (data.hasOwnProperty('amount'))
        obj.amount = ApiClient.convertToType(data['amount'], 'Number');
      if (data.hasOwnProperty('topup_number'))
        obj.topupNumber = ApiClient.convertToType(data['topup_number'], 'String');
      if (data.hasOwnProperty('sender'))
        obj.sender = ApiClient.convertToType(data['sender'], 'String');
      if (data.hasOwnProperty('member_id'))
        obj.memberId = ApiClient.convertToType(data['member_id'], 'Number');
      if (data.hasOwnProperty('status'))
        obj.status = TransactionsResponseStatus.constructFromObject(data['status']);
      if (data.hasOwnProperty('balance'))
        obj.balance = TransactionsResponseBalance.constructFromObject(data['balance']);
      if (data.hasOwnProperty('price'))
        obj.price = ApiClient.convertToType(data['price'], 'Number');
      if (data.hasOwnProperty('sn'))
        obj.sn = ApiClient.convertToType(data['sn'], 'String');
      if (data.hasOwnProperty('remarks'))
        obj.remarks = ApiClient.convertToType(data['remarks'], 'String');
      if (data.hasOwnProperty('ref_id'))
        obj.refId = ApiClient.convertToType(data['ref_id'], 'String');
    }
    return obj;
  }

  /**
   * @member {Number} id
   */
  exports.prototype.id = undefined;

  /**
   * @member {String} entryDate
   */
  exports.prototype.entryDate = undefined;

  /**
   * @member {module:model/TransactionsResponseProduct} product
   */
  exports.prototype.product = undefined;

  /**
   * @member {Number} amount
   */
  exports.prototype.amount = undefined;

  /**
   * @member {String} topupNumber
   */
  exports.prototype.topupNumber = undefined;

  /**
   * @member {String} sender
   */
  exports.prototype.sender = undefined;

  /**
   * @member {Number} memberId
   */
  exports.prototype.memberId = undefined;

  /**
   * @member {module:model/TransactionsResponseStatus} status
   */
  exports.prototype.status = undefined;

  /**
   * @member {module:model/TransactionsResponseBalance} balance
   */
  exports.prototype.balance = undefined;

  /**
   * @member {Number} price
   */
  exports.prototype.price = undefined;

  /**
   * @member {String} sn
   */
  exports.prototype.sn = undefined;

  /**
   * @member {String} remarks
   */
  exports.prototype.remarks = undefined;

  /**
   * @member {String} refId
   */
  exports.prototype.refId = undefined;

  return exports;

}));

/*
 * IIMMPACT API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2020-09-14T13:01:14Z
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.17
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ChangePasswordRequest', 'model/Error', 'model/InlineResponse200', 'model/InlineResponse2001', 'model/NewPasswordRequest', 'model/NewPasswordResponses'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/ChangePasswordRequest'), require('../model/Error'), require('../model/InlineResponse200'), require('../model/InlineResponse2001'), require('../model/NewPasswordRequest'), require('../model/NewPasswordResponses'));
  } else {
    // Browser globals (root is window)
    if (!root.IimmpactApi) {
      root.IimmpactApi = {};
    }
    root.IimmpactApi.MyAccountApi = factory(root.IimmpactApi.ApiClient, root.IimmpactApi.ChangePasswordRequest, root.IimmpactApi.Error, root.IimmpactApi.InlineResponse200, root.IimmpactApi.InlineResponse2001, root.IimmpactApi.NewPasswordRequest, root.IimmpactApi.NewPasswordResponses);
  }
}(this, function(ApiClient, ChangePasswordRequest, Error, InlineResponse200, InlineResponse2001, NewPasswordRequest, NewPasswordResponses) {
  'use strict';

  /**
   * MyAccount service.
   * @module api/MyAccountApi
   * @version 2020-09-14T13:01:14Z
   */

  /**
   * Constructs a new MyAccountApi. 
   * @alias module:api/MyAccountApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the v1AuthChangePasswordPost operation.
     * @callback module:api/MyAccountApi~v1AuthChangePasswordPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2001} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/ChangePasswordRequest} newPasswordRequest 
     * @param {module:api/MyAccountApi~v1AuthChangePasswordPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2001}
     */
    this.v1AuthChangePasswordPost = function(newPasswordRequest, callback) {
      var postBody = newPasswordRequest;

      // verify the required parameter 'newPasswordRequest' is set
      if (newPasswordRequest === undefined || newPasswordRequest === null) {
        throw new Error("Missing the required parameter 'newPasswordRequest' when calling v1AuthChangePasswordPost");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['SSO'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = InlineResponse2001;

      return this.apiClient.callApi(
        '/v1/auth/change-password', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AuthNewPasswordChallengePost operation.
     * @callback module:api/MyAccountApi~v1AuthNewPasswordChallengePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NewPasswordResponses} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/NewPasswordRequest} newPasswordRequest 
     * @param {module:api/MyAccountApi~v1AuthNewPasswordChallengePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NewPasswordResponses}
     */
    this.v1AuthNewPasswordChallengePost = function(newPasswordRequest, callback) {
      var postBody = newPasswordRequest;

      // verify the required parameter 'newPasswordRequest' is set
      if (newPasswordRequest === undefined || newPasswordRequest === null) {
        throw new Error("Missing the required parameter 'newPasswordRequest' when calling v1AuthNewPasswordChallengePost");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = NewPasswordResponses;

      return this.apiClient.callApi(
        '/v1/auth/new-password-challenge', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the v1BalanceGet operation.
     * @callback module:api/MyAccountApi~v1BalanceGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/MyAccountApi~v1BalanceGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse200}
     */
    this.v1BalanceGet = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['SSO'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = InlineResponse200;

      return this.apiClient.callApi(
        '/v1/balance', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));

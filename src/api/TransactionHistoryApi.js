/*
 * IIMMPACT API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2020-09-14T13:01:14Z
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.17
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BalanceStatementResponse', 'model/Error', 'model/TransactionsResponse'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/BalanceStatementResponse'), require('../model/Error'), require('../model/TransactionsResponse'));
  } else {
    // Browser globals (root is window)
    if (!root.IimmpactApi) {
      root.IimmpactApi = {};
    }
    root.IimmpactApi.TransactionHistoryApi = factory(root.IimmpactApi.ApiClient, root.IimmpactApi.BalanceStatementResponse, root.IimmpactApi.Error, root.IimmpactApi.TransactionsResponse);
  }
}(this, function(ApiClient, BalanceStatementResponse, Error, TransactionsResponse) {
  'use strict';

  /**
   * TransactionHistory service.
   * @module api/TransactionHistoryApi
   * @version 2020-09-14T13:01:14Z
   */

  /**
   * Constructs a new TransactionHistoryApi. 
   * @alias module:api/TransactionHistoryApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the v1BalanceStatementGet operation.
     * @callback module:api/TransactionHistoryApi~v1BalanceStatementGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BalanceStatementResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} _date 
     * @param {Object} opts Optional parameters
     * @param {String} opts.limit 
     * @param {String} opts.remarks 
     * @param {String} opts.sort 
     * @param {String} opts.type 
     * @param {String} opts.direction 
     * @param {String} opts.page 
     * @param {String} opts.amount 
     * @param {module:api/TransactionHistoryApi~v1BalanceStatementGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BalanceStatementResponse}
     */
    this.v1BalanceStatementGet = function(_date, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter '_date' is set
      if (_date === undefined || _date === null) {
        throw new Error("Missing the required parameter '_date' when calling v1BalanceStatementGet");
      }


      var pathParams = {
      };
      var queryParams = {
        'limit': opts['limit'],
        'remarks': opts['remarks'],
        'sort': opts['sort'],
        'type': opts['type'],
        'direction': opts['direction'],
        'date': _date,
        'page': opts['page'],
        'amount': opts['amount'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['SSO'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = BalanceStatementResponse;

      return this.apiClient.callApi(
        '/v1/balance-statement', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the v1TransactionsGet operation.
     * @callback module:api/TransactionHistoryApi~v1TransactionsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransactionsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} _date 
     * @param {Object} opts Optional parameters
     * @param {String} opts.refid 
     * @param {String} opts.limit 
     * @param {String} opts.sort 
     * @param {String} opts.offset 
     * @param {String} opts.direction 
     * @param {String} opts.status 
     * @param {String} opts.account 
     * @param {String} opts.acceptEncoding 
     * @param {String} opts.sn 
     * @param {String} opts.product 
     * @param {module:api/TransactionHistoryApi~v1TransactionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransactionsResponse}
     */
    this.v1TransactionsGet = function(_date, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter '_date' is set
      if (_date === undefined || _date === null) {
        throw new Error("Missing the required parameter '_date' when calling v1TransactionsGet");
      }


      var pathParams = {
      };
      var queryParams = {
        'refid': opts['refid'],
        'limit': opts['limit'],
        'sort': opts['sort'],
        'offset': opts['offset'],
        'direction': opts['direction'],
        'date': _date,
        'status': opts['status'],
        'account': opts['account'],
        'sn': opts['sn'],
        'product': opts['product'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Accept-Encoding': opts['acceptEncoding']
      };
      var formParams = {
      };

      var authNames = ['SSO'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = TransactionsResponse;

      return this.apiClient.callApi(
        '/v1/transactions', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
